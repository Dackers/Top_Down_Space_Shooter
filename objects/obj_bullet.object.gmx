<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet_2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Phaser

/* Stats */
//damage = 1;
decay = room_speed;
speed = 20;
owner = noone;
image_speed = 0;
image_index = 0;

/* Phaser Audio */
var snd = audio_play_sound(snd_phaser,5,false);
audio_sound_gain(snd,.1,0);
/*
emPhaserSound = audio_emitter_create();
audio_emitter_falloff(emPhaserSound,100,1000,1)
audio_emitter_pitch(emPhaserSound,1)
//audio_listener_orientation(obj_player.phy_position_x,obj_player.phy_position_y,0,0,0,0)

audio_play_sound_on(emPhaserSound,snd_phaser,false,1);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cleanup

//audio_emitter_free(emPhaserSound);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Turn off controller vibration

gamepad_set_vibration(obj_player.pad_num, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Decay &amp; destroy
decay--;
if (decay &lt;= 0)
{
    instance_destroy();
}
image_angle = direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_TARGET_Parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damage
if (instance_exists(owner) and other.id != owner) //Don't damage self
{
    //Damage is based on shooter's "phaser_damage" variable
    other.hp = other.hp - owner.phaser_damage;
    with (other) if hp &lt;= 0 { instance_destroy(); }
    
    //Knockback
    var dir = point_direction(x,y,other.x,other.y);
    var xforce = lengthdir_x(owner.phaser_knockback, dir);
    var yforce = lengthdir_y(owner.phaser_knockback, dir);
    with (other)
    {
        x += xforce;
        y += yforce;
        // ****Maybe make image_angler turn away from shot?
        //image_angle += random_range(-10,10);
    }
    //Doesn't work because alarm is never called because instance is destroyed
/*    if (other == obj_enemy)
    {
        gamepad_set_vibration(obj_player.pad_num, 1, 1);
        alarm[0] = room_speed/4;
    } */
       
    //Destroy phaser instance
    instance_destroy();
    
    //Create hit particles
    with (other)
    {
        var _xx = x+lengthdir_x(sprite_width/2,point_direction(x,y,other.x,other.y));
        var _yy = y+lengthdir_y(sprite_height/2,point_direction(x,y,other.x,other.y));
        part_particles_create(global.p_system, _xx, _yy, global.pt_phaser_hit, irandom_range(7,10));
    }
    
    //Hit sound
    var snd = audio_play_sound(snd_phaser_hit, 5, 0);
    audio_sound_gain(snd,.2,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
